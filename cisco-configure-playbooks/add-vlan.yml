#Ansible Playbook to add new vlans, create trunks and create the L2 interfaces and add the VLANs
---
- name: Configure new VLANs on each IOS Switch
  hosts: NN-SW-03, NN-SW-04
  gather_facts: false
  connection: local

  tasks:
  - name: Create new VLANs and merge with existing VLANs on the device
    cisco.ios.ios_vlans:
      config:
      - name: HR_VLAN
        vlan_id: 10
        state: active
        shutdown: disabled
      - name: Finance_VLAN
        vlan_id: 20
        state: active
        shutdown: disabled
      - name: VOICE_VLAN
        vlan_id: 30
        state: active
        shutdown: disabled
      - name: Native_VLAN
        vlan_id: 50
        state: active 
        shutdown: disabled
      - name: Blackhole_VLAN
        vlan_id: 666
        state: active 
        shutdown: enabled
      state: merged
# Task above will create the VLANs using the name provided

  - name: Create the L2 interfaces and add the VLANs
    cisco.ios.ios_l2_interfaces:
      config:
      - name: GigabitEthernet0/1
        mode: trunk
        trunk:
          allowed_vlans: 10,20,40,50
          native_vlan: 50
          encapsulation: dot1q
      - name: GigabitEthernet0/2
        mode: trunk
        trunk:
          allowed_vlans: 10,20,40,50
          native_vlan: 50
          encapsulation: dot1q
      - name: GigabitEthernet 0/3
        mode: access
        access:
          vlan: 10
        voice:
          vlan: 40
      - name: GigabitEthernet1/0
        mode: access
        access:
          vlan: 20
        voice:
          vlan: 40
      - name: GigabitEthernet1/1
        mode: access
        access:
          vlan: 666
      - name: GigabitEthernet1/2
        mode: access
        access:
          vlan: 666
      - name: GigabitEthernet1/3
        mode: access
        access:
          vlan: 666
      state: merged
# Task is going to create the L2 interfaces (both trunk and access) and add the relevant VLANs

  - name: show merged VLAN information
    ios_command:
      commands: show vlan brief
    register: print_vlan
  - debug: var=print_vlan.stdout_lines
# Task will show the VLAN configuration on the switches after the new VLANs have been added

  - name: Save the new runnig configuration to memory
    ios_command:
      commands: wr mem
# task will save the running configuration to memory
...