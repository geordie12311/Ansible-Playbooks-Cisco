# Ansible Playbook to read information from device and netbox and compare

---
- name: "READ NETWORK DEVICE INFORMATION AND COMPARE NETBOX"
  hosts: R1
  become: yes
  become_method: enable
  connection: network_cli
  vars:
    netbox_url: "{{ lookup('ENV', 'http://192.168.1.10') }}"
    netbox_token: "{{ lookup('ENV', 0b37ac1846dbe80764035d9b2a5cf8b908a9995b) }}"
    netbox_headers:
      Content-Type: "application/json"
      Authorization: "token {{ 0b37ac1846dbe80764035d9b2a5cf8b908a9995b }}"
    netbox_serial_list: []
    device_serial_list: []
  tasks:
    
    - name: "TASK 1: IOS >> GET IOS FACTS"
      ios_facts:
        gather_subset: "!config"
      when: "ansible_network_os == 'ios'"

    - name: "TASK 2: NETBOX >> GATHER NETBOX DATA"
      uri:
        url: "{{ 192.168.1.10 }}/api/dcim/devices/?q={{ inventory_hostname }}"
        headers: "{{ netbox_headers }}"
        method: GET
        status_code: 200
      register: netbox_device_results

    - name: "TASK 3: SYS >> BUILD NETBOX SERIAL NUMBER LIST FROM NETBOX RESPONSES"
      set_fact:
        netbox_serial_list: "{{ netbox_serial_list + [ item.serial ] }}"
      loop: "{{ netbox_device_results['json']['results'] }}"
      loop_control:
        label: "{{ item.name }}"

    - name: "TASK 4: SYS >> BUILD IOS DEVICE SERIAL LIST USING FILTER"
      set_fact:
        device_serial_list: "{{ ansible_facts | get_ciscoios_serial_list }}"

    - name: "TASK 5: SYS >> VERIFY DEVICE DATA VS NETBOX - CUSTOM FILTER"
      assert:
        that:
          - "device_serial_list | compare_lists(netbox_serial_list)"
        fail_msg:
          - "Device Serial List: {{ device_serial_list }}"
          - "NetBox Serial List: {{ netbox_serial_list }}"
        success_msg:
          - "Device Serial List: {{ device_serial_list }}"
          - "NetBox Serial List: {{ netbox_serial_list }}"
...