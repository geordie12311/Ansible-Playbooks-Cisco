# Ansible Playbook to do pre-checks prior to changes ran in task 6 and post checks following the change
---
- name: "PLAY 1: This playbook configures loopback interfaces on hosts"
  hosts: CSR_hosts
  connection: network_cli
  tasks:
    - name: "TASK 1: set time for pre-check"
      ansible.builtin.set_fact:
        date_stamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H:%M') }}"
        # Pipe lookup plugin reads output from a command,to grab date/time to make unique filename
      run_once: true

    - name: "TASK 2: set fact for pre-change filename which uses date"
      ansible.builtin.set_fact:
        pre_file: ./outputs/{{ inventory_hostname }}/pre_change/{{ date_stamp }}_{{ inventory_hostname }}.txt
        # The output folder is in gitignore and we make a unique filename based on current time
        mode: "0664"

    - name: "TASK 3: ensure directory for each device exists pre-change output"
      ansible.builtin.file:
        path: ./outputs/{{ inventory_hostname }}/pre_change/ # Make a dir per hostname and then create a sub-folder to organize the pre-change outputs
        state: directory
        mode: "0600"

    - name: "TASK 4: send pre-change show commands"
      ansible.netcommon.cli_command:
        command: "{{ item }}" # Sending multiple commands requires a loop with this module since it expects a string, we feed it in with the loop / item
      loop:
        - show ip interface brief
        - show interfaces
        - show ip route
      register: show_result # This result is going to get fed into our Jinja2 template to then get written to our pre-change output

    - name: "TASK 5: send the output of pre-change commands to a nice template and print it to a file"
      ansible.builtin.copy:
        content: "{{ lookup('template', '../templates/pre-post-template.j2') }}"
        # The template plugin applies the Jinja2 template with our show command variables in memory from the previous task
        dest: "{{ pre_file }}" # Defines long name in task 2 as a fact based on date time and hostname
        mode: "0664"

    - name: "TASK 6: Configure the loopback interfaces that are listed in the host_vars/ directory"
    # This can be changed to configure anything you want
      ansible.netcommon.cli_command:
        command:
          config: "{{ lookup('template', '../templates/pre-post-template.j2') }}" # Configure the loopbacks based on host_vars and Jinja2 template
        register: cli_result # Save the output to the 'cli_result' if we need it, not using it though since just configuring not showing

    - name: "TASK 7: set time for post-change"
      ansible.builtin.set_fact:
        date_stamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H:%M') }}" # Resetting date time for post change filenames
      run_once: true

    - name: "TASK 8: ensure post-change directory exists"
      ansible.builtin.file:
        path: ./outputs/{{ inventory_hostname }}/post_change/
        state: directory
        mode: "644"

    - name: "TASK 9: set fact for post-check filename which uses date"
      ansible.builtin.set_fact:
        post_file: ./outputs/{{ inventory_hostname }}/post_change/{{ date_stamp }}_{{ inventory_hostname }}.txt

    - name: "TASK 10: send post-change show commands"
      ansible.netcommon.cli_command:
        command: "{{ item }}"
      loop:
        - show ip interface brief
        - show interfaces
        - show ip route
      register: show_result

    - name: "TASK 11: send the output of post-change commands to a nice template and print it to a file"
      ansible.builtin.copy:
        content: "{{ lookup('template', '../templates/pre-post-template.j2') }}"
        dest: "{{ post_file }}" # defined in previous task setting fact to keep it clean here and easy to update later
        mode: "0664"

    - name: "TASK 12: get diff of pre change vs post change output"
      ansible.builtin.command: >
        diff {{ pre_file }} {{ post_file }}
      register: difference # Using linux diff to compare the pre and post filenames that we defined in our set facts, saving diff output
      failed_when: difference.rc > 1
      changed_when: difference.rc == 1

    - name: "Task 13: ensure diff directory exists"
      ansible.builtin.file:
        path: ./outputs/{{ inventory_hostname }}/diff/ # Making a separate dir for diffs per device
        state: directory
        mode: "644"

    - name: "Task 14: put diffs between pre and post change, if they exist, in the diff file for that device name"
      when: difference.stdout is defined # Will only run if there are actual differences between the two files
      ansible.builtin.copy:
        content: "{{ difference.stdout }}"
        dest: ./outputs/{{ inventory_hostname }}/diff/diff_{{ date_stamp }}_{{ inventory_hostname }}.txt
        # Dump the diffs into a date time stamped file per host
        mode: "0644"
